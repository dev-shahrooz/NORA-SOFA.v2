تغییر مسیر های فایل ها وقتی روی رزبری پای بالا اومد
/////////
تغییر ادرس دیتا بیس برای رزبری پای DB_PATH = os.environ.get("NORA_DB", "/home/pi/nora/data/nora.db")
/////////
در اپ ویس اسیستنت اونجایی که داره سوکت امیت میشه باید 
"source": "va"
را در سوکت همواره ارسال کنیم تا source در دیتا بیس ذخیره شود
# voice_client.py  (روی همان دستگاه دستیار صوتی)
import socketio, time, uuid

sio = socketio.Client()  # pip install "python-socketio[client]"

sio.connect("http://127.0.0.1:8080")  # یا آدرس سرور Nora

def send_intent(action: str, payload: dict):
    corr = str(uuid.uuid4())
    sio.emit("ui.intent", {"type": action, "payload": payload, "corr_id": corr}, "source": "va")

# مثال‌ها:
# روشن کردن چراغ مطالعه:
send_intent("reading_light.set", {"on": True})

# خاموش کردن:
send_intent("reading_light.set", {"on": False})

# منبع صدا اسپاتیفای:
send_intent("audio.set_source", {"source": "spotify"})

# پخش/توقف:
send_intent("audio.command", {"op": "play_pause"})





## 4) core/usecases/lighting.py (منطق نور)

```python

```

---

## 5) core/usecases/audio.py (منطق صوت)

```python

```

---

## 6) core/action\_router.py (مسیر‌دهی اکشن‌ها)

```python

```

---

## 7) services/audio\_service.py (بلوتوث + اسپاتیفای)

```python
# nora/services/audio_service.py

```

---

## 8) services/bt\_pairing.py (فعال‌سازی Pairing window)

```python

```

---

## 9) drivers/esp32\_link.py (لینک سریال به ESP32)

```python

```

---

## 10) drivers/gpio\_driver.py (جایگزین/ماک GPIO)

```python

```

---

## 11) app.py (Flask + Socket.IO + Wire-up)

```python

```

---

## 12) ui/index.html (مینیمال با Mini-Player)

```html

```

---

## 13) ui/app.js (Socket.IO هندل‌ها)

```javascript

```

---

## 14) ui/style.css (ساده)

```css

```

---

## 15) API اضافی برای Pair (اختیاری)

> اگر می‌خواهی از UI با `fetch('/api/pair')` Pairing را صدا بزنی، در `app.py` یک Route کوچک اضافه کن:

```python
# داخل app.py بعد از تعریف app/sio
from flask import jsonify, request
from nora.services.bt_pairing import start_pairing_window

@app.post('/api/pair')
def api_pair():
    start_pairing_window(120)
    return jsonify({"ok": True})
```

---

## 16) scripts/nora-bt-pair.sh

```bash

```

---

## 17) systemd/nora-bt-pair.service

```ini

```

---

## 18) systemd/nora-backend.service

```ini

```

---

## 19) systemd/nora-kiosk.service (Chromium Kiosk)

```ini
[Unit]
Description=Nora Kiosk UI
After=graphical.target nora-backend.service

[Service]
User=pi
Environment=DISPLAY=:0
ExecStart=/usr/bin/chromium \
  --app=http://127.0.0.1:8080 \
  --kiosk --noerrdialogs --disable-session-crashed-bubble \
  --autoplay-policy=no-user-gesture-required \
  --incognito --overscroll-history-navigation=0 \
  --disable-pinch --disable-translate
Restart=always
RestartSec=2

[Install]
WantedBy=graphical.target
```

---

## 20) راه‌اندازی سریع

```bash
# 1) کپی پروژه به /home/pi/nora و ایجاد venv (اختیاری)
cd /home/pi/nora
python3 -m venv .venv && source .venv/bin/activate
pip install -r requirements.txt

# 2) نصب اسکریپت pair و سرویس‌ها
sudo install -m 0755 scripts/nora-bt-pair.sh /usr/local/bin/nora-bt-pair.sh
sudo install -m 0644 systemd/nora-bt-pair.service /etc/systemd/system/
sudo install -m 0644 systemd/nora-backend.service /etc/systemd/system/
sudo install -m 0644 systemd/nora-kiosk.service /etc/systemd/system/

sudo systemctl daemon-reload
sudo systemctl enable --now nora-bt-pair.service nora-backend.service nora-kiosk.service

# 3) Spotify Connect (raspotify)
curl -sL https://dtcooper.github.io/raspotify/install.sh | sh
sudo sed -i 's/^#\?DEVICE_NAME.*/DEVICE_NAME="Nora Sofa"/' /etc/raspotify/conf
sudo sed -i 's/^#\?BITRATE.*/BITRATE="320"/' /etc/raspotify/conf
sudo systemctl enable --now raspotify
```

---

## 21) نکات تولیدی

* از PipeWire به‌عنوان میکسر مرکزی استفاده کن؛ در صورت نیاز sink پیش‌فرض را صریح تنظیم کن.
* اگر پورت ESP32 متفاوت است، متغیر محیطی `ESP_PORT` را برای `nora-backend.service` اضافه کن.
* Log Rotation برای journald یا فایل‌های اختصاصی اضافه شود.
* اگر برق قطع شد، State با Snapshot پایدار است؛ هر تغییر مهم → snapshot.
* امنیت محلی: دسترسی UI در شبکه را محدود به localhost یا subnet دلخواه کن.

---

این اسکلت برای استارت سریع و تست تولیدی آماده شده و به‌راحتی قابل توسعه است (افکت‌های نور، EQ از ورودی PipeWire، دیباگ صفحه Diagnostics، تم روشن/تاریک UI و ...).
